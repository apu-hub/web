{"version":3,"sources":["components/popup/index.jsx","components/landing/index.jsx"],"names":["Main","props","show","className","onClick","onClose","e","stopPropagation","title","body","useState","customStory","setCustomStory","popupBody","setPopupBody","popupTitle","setPopupTitle","showPopUp","setShowPopUp","useComp","setComp","saveToLocalStorage","story","storyArray","split","localStorage","getItem","LS_store","reference_letters","setItem","JSON","stringify","parse","onClickPrefixed","storyNo","prefixedStory","id","name","placeholder","onChange","target","value","length"],"mappings":"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","file":"static/js/3.8f8a8d03.chunk.js","sourcesContent":["// stylesheer\r\nimport \"./popup.css\"\r\n/**\r\n * \r\n * @param {*} props show 'true' or 'false'\r\n * @param {*} props title\r\n * @param {*} props body\r\n * @returns \r\n */\r\n// ------ Main Component ------ //\r\nfunction Main(props) {\r\n    if (!props.show) {\r\n        return null;\r\n    }\r\n    return (\r\n        <div className=\"modal\" onClick={props.onClose}>\r\n            <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\r\n                <div className=\"modal-header\"><h4 className=\"modal-title\">{props.title}</h4></div>\r\n                <div className=\"modal-body\">{props.body}</div>\r\n                <div className=\"modal-footer\">\r\n                    <button onClick={props.onClose} className=\"modal-button-close\">close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Main;","// import moduls\r\nimport { useState } from \"react\";\r\nimport { useComp } from '../../global_state'\r\nimport PopUp from '../popup'\r\n\r\n// stylesheet\r\nimport \"./landing.css\"\r\n\r\n// data\r\nimport prefixedStory from '../../assests/data/prefixed_story.json'\r\n\r\n\r\n// ------ Main Component ------ //\r\nfunction Main() {\r\n    // state\r\n    const [customStory, setCustomStory] = useState(\"\");\r\n    const [popupBody, setPopupBody] = useState(\"he he, I did something worng\");\r\n    const [popupTitle, setPopupTitle] = useState(\"Warning\");\r\n    const [showPopUp, setShowPopUp] = useState(false);\r\n    // hooks\r\n    const [getComp, setComp] = useComp();\r\n\r\n    // functions\r\n    // ^^^^^^ Save Story To Local Storage ^^^^^^ //\r\n    function saveToLocalStorage(story) {\r\n        let storyArray = story.split(\"\");\r\n        if (localStorage.getItem(\"store\") === null) {\r\n            let LS_store = {\r\n                reference_letters: storyArray\r\n            };\r\n            localStorage.setItem(\"store\", JSON.stringify(LS_store));\r\n        } else {\r\n            let LS_store = JSON.parse(localStorage.getItem(\"store\"));\r\n            LS_store[\"reference_letters\"] = storyArray;\r\n            localStorage.setItem(\"store\", JSON.stringify(LS_store));\r\n        }\r\n    }\r\n\r\n    // ^^^^^^ On Click Start Now ^^^^^^ //\r\n    function onStartNow() {\r\n        // Check custom story lenth \r\n        // minimum lenght 100 characters\r\n        if (customStory.length < 100) {\r\n            // Show Warning\r\n            setPopupBody(<>\r\n                Minimum <b>100 characters</b> needed for start\r\n            </>);\r\n            setPopupTitle(\"Warning\");\r\n            setShowPopUp(true);\r\n            return;\r\n        }\r\n        // save it to local store \r\n        saveToLocalStorage(customStory);\r\n\r\n        // Load Type Area\r\n        setComp(\"type_area\");\r\n    }\r\n    function onClickPrefixed(storyNo) {\r\n        // save it to local store \r\n        saveToLocalStorage(prefixedStory[storyNo].story);\r\n        // Load Type Area\r\n        setComp(\"type_area\");\r\n    }\r\n\r\n    return (\r\n        <div id=\"landing\">\r\n            <PopUp show={showPopUp} body={popupBody} title={popupTitle} onClose={() => setShowPopUp(false)} />\r\n            <div className=\"story custom-story\">\r\n                <textarea\r\n                    className=\"bmp-cleaner \"\r\n                    name=\"custom-story-textarea\"\r\n                    placeholder=\"Remember, be nice!\"\r\n                    id=\"custom-story-textarea\"\r\n                    onChange={e => setCustomStory(e.target.value)}\r\n                    value={customStory}\r\n                ></textarea>\r\n                <br />\r\n                <button\r\n                    className=\"bmp-cleaner \"\r\n                    id=\"start-now-button\"\r\n                    onClick={onStartNow}\r\n                >Start Now</button>\r\n            </div>\r\n            <div className=\"story prefixed-story\">\r\n                <div id=\"prefixed-story-buttons\">\r\n                    <button className=\"story-button\" onClick={() => { onClickPrefixed(0) }}>{prefixedStory[0].name}</button><br />\r\n                    <button className=\"story-button\" onClick={() => { onClickPrefixed(1) }}>{prefixedStory[1].name}</button><br />\r\n                    <button className=\"story-button\" onClick={() => { onClickPrefixed(2) }}>{prefixedStory[2].name}</button><br />\r\n                    <button className=\"story-button\" onClick={() => { onClickPrefixed(3) }}>{prefixedStory[3].name}</button><br />\r\n                    <button className=\"story-button\" onClick={() => { onClickPrefixed(4) }}>{prefixedStory[4].name}</button><br />\r\n                    <button className=\"story-button\" onClick={() => { onClickPrefixed(5) }}>{prefixedStory[5].name}</button><br />\r\n                    <button className=\"story-button\" onClick={() => { onClickPrefixed(6) }}>{prefixedStory[6].name}</button><br />\r\n                    <button className=\"story-button\" onClick={() => { onClickPrefixed(7) }}>{prefixedStory[7].name}</button><br />\r\n                    <button className=\"story-button\" onClick={() => { onClickPrefixed(8) }}>{prefixedStory[8].name}</button><br />\r\n                    <button className=\"story-button\" onClick={() => { onClickPrefixed(9) }}>{prefixedStory[9].name}</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main;"],"sourceRoot":""}