{"version":3,"sources":["components/popup/index.jsx","hooks/useCountTime.js","components/type_area/actions.js","components/type_area/index.jsx"],"names":["Main","props","show","className","onClick","onClose","e","stopPropagation","title","body","useCountTime","initialState","useState","timer","setTimer","isActive","setIsActive","isPaused","setIsPaused","countRef","useRef","handleStart","current","setInterval","handlePause","clearInterval","handleResume","handleReset","formatTime","getSeconds","slice","minutes","Math","floor","getMinutes","charTOword","array","tempWord","tempWordArray","i","map","search","length","btnCon","setbtnCon","useComp","setCompName","referenceLetters","setReferenceLetters","typeLetters","setTypeLetters","targetTime","setTargetTime","timeOption","setTimeOption","modalBody","setModalBody","modalTitle","setModalTitle","popUp","setPopUp","onClickStop","typeTime","referenceCharacters","typeCharactersStr","typeCharacters","split","typeWords","result","ssc","maxWS","minWS","mostWordArray","rindex","push","word","no","a","index","undefined","mostWordIndex","wpm","cpm","totalWord","totalChar","maxW","minW","mcc","overallScore","actions","selectTime","time","backToLanding","useEffect","localStorage","getItem","LS_store","JSON","parse","reference_letters","id","letter","out","disabled","autoFocus","onChange","target","value","name","style","backgroundColor"],"mappings":"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","file":"static/js/4.4682a372.chunk.js","sourcesContent":["// stylesheer\r\nimport \"./popup.css\"\r\n/**\r\n * \r\n * @param {*} props show 'true' or 'false'\r\n * @param {*} props title\r\n * @param {*} props body\r\n * @returns \r\n */\r\n// ------ Main Component ------ //\r\nfunction Main(props) {\r\n    if (!props.show) {\r\n        return null;\r\n    }\r\n    return (\r\n        <div className=\"modal\" onClick={props.onClose}>\r\n            <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\r\n                <div className=\"modal-header\"><h4 className=\"modal-title\">{props.title}</h4></div>\r\n                <div className=\"modal-body\">{props.body}</div>\r\n                <div className=\"modal-footer\">\r\n                    <button onClick={props.onClose} className=\"modal-button-close\">close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Main;","import { useState, useRef } from 'react';\r\n\r\nconst useCountTime = (initialState = 0) => {\r\n    const [timer, setTimer] = useState(initialState);\r\n    const [isActive, setIsActive] = useState(false)\r\n    const [isPaused, setIsPaused] = useState(false)\r\n    const countRef = useRef(null);\r\n\r\n    const handleStart = () => {\r\n        setIsActive(true)\r\n        setIsPaused(true)\r\n        countRef.current = setInterval(() => {\r\n            setTimer((timer) => timer + 1)\r\n        }, 1000)\r\n    }\r\n\r\n    const handlePause = () => {\r\n        clearInterval(countRef.current)\r\n        setIsPaused(false)\r\n    }\r\n\r\n    const handleResume = () => {\r\n        setIsPaused(true)\r\n        countRef.current = setInterval(() => {\r\n            setTimer((timer) => timer + 1)\r\n        }, 1000)\r\n    }\r\n\r\n    const handleReset = () => {\r\n        clearInterval(countRef.current)\r\n        setIsActive(false)\r\n        setIsPaused(false)\r\n        setTimer(0)\r\n    }\r\n\r\n    return { timer, isActive, isPaused, handleStart, handlePause, handleResume, handleReset }\r\n\r\n}\r\n\r\nexport default useCountTime;","export function generateResult(typeTime, referenceCharacters, typeCharactersStr) {\r\n\r\n\r\n\r\n    // let referenceCharacters = [\"a\", \"B\", \".\", \"c\", \",\", \"1\",];\r\n    // let typeCharacters = [\",\", \"b\", \"c\", \"c\", \".\", \"h\", \",\", \"1\", \",\", \"2\", \" \", \"2\",];\r\n\r\n    let referenceWords = charTOword(referenceCharacters);\r\n    let typeCharacters = typeCharactersStr.split(\"\");\r\n    let typeWords = charTOword(typeCharacters);\r\n\r\n    // temp variable\r\n    // let typeTime = 75; // in second\r\n\r\n\r\n\r\n    let result = {};\r\n    // correct word & character\r\n    // Word Per Minute\r\n    result[\"wpm\"] = (60 / (typeTime / typeWords.length));\r\n\r\n    // Character Per Minute\r\n    result[\"cpm\"] = (60 / (typeTime / typeCharacters.length));\r\n\r\n    // Total Words\r\n    result[\"totalWord\"] = typeWords.length;\r\n\r\n    // Total Characters\r\n    result[\"totalChar\"] = typeCharacters.length;\r\n\r\n    // Space & Special Characters\r\n    let ssc = 0;\r\n    typeCharacters.map((e) => { if (e.search(/[a-zA-Z0-9]/) !== 0) ssc++; });\r\n    result[\"ssc\"] = ssc;\r\n\r\n    // Maximum Word Size\r\n    let maxWS = 1;\r\n    typeWords.map((e) => { if (maxWS <= e.length) maxWS = e.length; });\r\n    result[\"maxW\"] = maxWS;\r\n\r\n    // Minimum Word Size\r\n    let minWS = 1;\r\n    typeWords.map((e) => { if (minWS >= e.length) minWS = e.length; });\r\n    result[\"minW\"] = minWS;\r\n\r\n    // Most Common Character\r\n    let mostWordArray = [];\r\n    typeWords.map((e) => {\r\n        if (mostWordArray.length === 0) {\r\n            mostWordArray.push({ word: e, no: 1 });\r\n        } else {\r\n            let rindex\r\n            mostWordArray.map((a, index) => {\r\n                if (a.word === e) rindex = index;\r\n            });\r\n            if (rindex !== undefined) {\r\n                mostWordArray[rindex].no += 1;\r\n            } else {\r\n                mostWordArray.push({ word: e, no: 1 });\r\n            }\r\n        }\r\n    });\r\n    let mostWordIndex = 0;\r\n    mostWordArray.map((e, index) => { if (mostWordArray[mostWordIndex].no < e.no) { mostWordIndex = index; } });\r\n    result[\"mcc\"] = mostWordArray[mostWordIndex].word;\r\n\r\n    // Overall Score\r\n    result[\"overallScore\"] = result.wpm / 0.4;\r\n    return <>\r\n        Word Per Minute : {result.wpm} <br />\r\n        Character Per Minute : {result.cpm}<br />\r\n        Total Words : {result.totalWord}<br />\r\n        Total Characters : {result.totalChar}<br />\r\n        Space & Special Characters : {result.ssc} <br />\r\n        Maximum Word Size : {result.maxW}<br />\r\n        Minimum Word Size : {result.minW}<br />\r\n        Most Common Character : {result.mcc}<br />\r\n        <b>Overall Score : {result.overallScore}% (By Standard)</b>\r\n    </>;\r\n}\r\n// Time Format\r\nexport const formatTime = (timer) => {\r\n    const getSeconds = `0${(timer % 60)}`.slice(-2)\r\n    const minutes = `${Math.floor(timer / 60)}`\r\n    const getMinutes = `0${minutes % 60}`.slice(-2)\r\n    const getHours = `0${Math.floor(timer / 3600)}`.slice(-2)\r\n\r\n    return `${getMinutes} : ${getSeconds}`\r\n}\r\n\r\n// character array to ward array\r\nfunction charTOword(array) {\r\n    let tempWord = \"\";\r\n    let tempWordArray = [];\r\n    let i = 0;\r\n    array.map((e) => {\r\n        // check valid char\r\n        if (e.search(/[a-zA-Z0-9]/) !== 0) {\r\n            // incase first char is not matched\r\n            if (tempWordArray.length !== 0)\r\n                i++;    // increament array index\r\n\r\n            tempWord = \"\";  // clear it for next word\r\n        } else {\r\n            tempWord += e;  // add next char of the word\r\n            tempWordArray[i] = tempWord;    // store word\r\n        }\r\n    });\r\n    return tempWordArray;\r\n}","import { useEffect, useState, useRef } from \"react\";\r\nimport \"./type_area.css\";\r\nimport PopUp from '../popup'\r\nimport useCountTime from '../../hooks/useCountTime'\r\nimport * as actions from './actions.js'\r\nimport { useComp } from '../../global_state'\r\n// #########    hook\r\nfunction useFocus() {\r\n    const htmlRef = useRef(null);\r\n    const setFocus = () => { htmlRef.current && htmlRef.current.focus() }\r\n    // const setFo = () => { htmlRef.current && htmlRef.current.focus() }\r\n    return [htmlRef, setFocus];\r\n}\r\n\r\n// ------ Main Component ------ //\r\nfunction Main() {\r\n    // State Variable\r\n    const [btnCon, setbtnCon] = useState(true);\r\n    const [compName, setCompName] = useComp();\r\n    const [referenceLetters, setReferenceLetters] = useState([]);\r\n    const [typeLetters, setTypeLetters] = useState(\"\");\r\n    // const [typeLettersRef, setTypeLettersRef] = useFocus();\r\n    const [targetTime, setTargetTime] = useState(10);\r\n    const [timeOption, setTimeOption] = useState(\"select\");\r\n    // const [typeControl, setTypeControl] = useState(\"pase\");\r\n    const [modalBody, setModalBody] = useState(\"he he, I did something worng\");\r\n    const [modalTitle, setModalTitle] = useState(\"Warning\");\r\n    const [popUp, setPopUp] = useState(false);\r\n    const { timer, isActive, isPaused, handleStart, handlePause, handleResume, handleReset } = useCountTime(0);\r\n    \r\n    // ^^^^^^ On Click Ready ^^^^^^ //\r\n    function onClickReady() {\r\n        // setTypeLettersRef();\r\n        setbtnCon(false);\r\n        // setTypeLetters(\"\");\r\n        setTimeOption(\"counter\")\r\n        handleStart();\r\n    }\r\n\r\n    // ^^^^^^ On Click Stop ^^^^^^ //\r\n    function onClickStop() {\r\n        setbtnCon(false);\r\n        handlePause();\r\n        if (typeLetters.length !== 0) {\r\n            setModalBody(actions.generateResult(timer, referenceLetters, typeLetters));\r\n            setModalTitle(\"Result\");\r\n            setPopUp(true);\r\n        }\r\n        handleReset();\r\n        // setTypeLetters(\"\");\r\n        setTimeOption(\"change\");\r\n    }\r\n\r\n    // ^^^^^^ On Select Time ^^^^^^ //\r\n    function selectTime(time) {\r\n        // console.log(time);   // Only Dev\r\n        setTargetTime(time);\r\n        setTimeOption(\"change\");\r\n    }\r\n\r\n    // ^^^^^^ Back To Landing ^^^^^^ //\r\n    function backToLanding() {\r\n        // console.log(\"called\");\r\n        setCompName(\"landing\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (timer >= targetTime) {\r\n            onClickStop();\r\n        }\r\n        if (localStorage.getItem(\"store\") === null) {\r\n            // Return to Landing \r\n            backToLanding();\r\n        } else {\r\n            let LS_store = JSON.parse(localStorage.getItem(\"store\"));\r\n            setReferenceLetters(LS_store.reference_letters);\r\n        }\r\n    }, [timer])\r\n    return (<div id=\"typearea\">\r\n        <PopUp show={popUp} onClose={() => setPopUp(false)} body={modalBody} title={modalTitle} />\r\n        <div id=\"typearea-content\">\r\n            <div id=\"reference-letters\">\r\n\r\n                {referenceLetters.map((letter, index) => {\r\n\r\n                    let out = \" \";\r\n                    if (typeLetters[index] === undefined) {\r\n                        if (letter === \" \") {\r\n                            out = <span key={index}> </span>;\r\n                        } else {\r\n                            out = <span key={index}>{letter}</span>;\r\n                        }\r\n                    } else {\r\n                        if (letter === typeLetters[index]) {\r\n                            if (letter === \" \") {\r\n                                out = <span key={index} className=\"right-letter\"> </span>;\r\n                            } else {\r\n                                out = <span key={index} className=\"right-letter\">{letter}</span>;\r\n                            }\r\n                        } else {\r\n                            if (letter === \" \") {\r\n                                out = <span key={index} className=\"wrong-letter\"> </span>;\r\n                            } else {\r\n                                out = <span key={index} className=\"wrong-letter\">{letter}</span>;\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                    return (<>{out}</>);\r\n                })\r\n                }\r\n            </div>\r\n            <div id=\"type-letters\">\r\n                <textarea disabled={btnCon} autoFocus={true} onChange={(e) => { setTypeLetters(e.target.value) }} name=\"type-letters-textarea\" id=\"type-letters-textarea\" value={typeLetters}></textarea>\r\n            </div>\r\n        </div>\r\n        <div id=\"typearea-option\">\r\n            {timeOption === \"counter\" ? <span id=\"counter-time\">{actions.formatTime(timer)}</span> : (timeOption === \"select\" ? (\r\n                <span id=\"select-time\">\r\n                    <u>Select Time</u><br />\r\n                    <button onClick={() => selectTime(10)} className=\"select-time-button\" style={{ backgroundColor: 'rgb(246, 246, 246)' }}>1 minute</button><br />\r\n                    <button onClick={() => selectTime(120)} className=\"select-time-button\" style={{ backgroundColor: 'rgb(234, 234, 234)' }}>2 minute</button><br />\r\n                    <button onClick={() => selectTime(300)} className=\"select-time-button\" style={{ backgroundColor: 'rgb(212, 212, 212)' }}>5 minute</button><br />\r\n                    <button onClick={() => selectTime(500)} className=\"select-time-button\" style={{ backgroundColor: 'rgb(196, 196, 196)' }}>custom</button>\r\n                </span>\r\n            ) : (<span id=\"change-time\">\r\n                <button onClick={() => setTimeOption(\"select\")} className=\"select-time-button\" style={{ backgroundColor: 'rgb(196, 196, 196)' }}>change</button>\r\n            </span>))}\r\n\r\n            {!isActive ? (\r\n                <span id=\"ready\">\r\n                    <button className=\"ready-button\" onClick={onClickReady}>Ready</button><br />\r\n                    <button className=\"exit-button\" onClick={backToLanding}>Exit</button>\r\n                </span>\r\n            ) : (isActive && isPaused ? (\r\n                <span>\r\n                    <button className=\"pause-button\" onClick={handlePause}>Pause</button><br />\r\n                    <button className=\"stop-button\" onClick={onClickStop}>Stop</button>\r\n                </span>\r\n            ) : <span>\r\n                <button className=\"pause-button\" onClick={handleResume}>Resume</button><br />\r\n                <button className=\"stop-button\" onClick={onClickStop}>Stop</button>\r\n            </span>)}\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default Main;"],"sourceRoot":""}